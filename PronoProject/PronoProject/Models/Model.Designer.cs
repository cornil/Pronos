//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "SkillUser", "Skill", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PronoProject.Models.Skill), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PronoProject.Models.User))]
[assembly: EdmRelationshipAttribute("Model", "SportsPronostics", "Sports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PronoProject.Models.Sports), "Pronostics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PronoProject.Models.Pronostics))]
[assembly: EdmRelationshipAttribute("Model", "UserPronostics", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PronoProject.Models.User), "Pronostics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PronoProject.Models.Pronostics))]
[assembly: EdmRelationshipAttribute("Model", "EventsGames", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PronoProject.Models.Events), "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PronoProject.Models.Games))]
[assembly: EdmRelationshipAttribute("Model", "GamesPronostics", "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PronoProject.Models.Games), "Pronostics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PronoProject.Models.Pronostics))]
[assembly: EdmRelationshipAttribute("Model", "SportsEvents", "Sports", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PronoProject.Models.Sports), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PronoProject.Models.Events))]

#endregion

namespace PronoProject.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ModelContainer object using the connection string found in the 'ModelContainer' section of the application configuration file.
        /// </summary>
        public ModelContainer() : base("name=ModelContainer", "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelContainer object.
        /// </summary>
        public ModelContainer(string connectionString) : base(connectionString, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelContainer object.
        /// </summary>
        public ModelContainer(EntityConnection connection) : base(connection, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> UserSet
        {
            get
            {
                if ((_UserSet == null))
                {
                    _UserSet = base.CreateObjectSet<User>("UserSet");
                }
                return _UserSet;
            }
        }
        private ObjectSet<User> _UserSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Skill> SkillSet
        {
            get
            {
                if ((_SkillSet == null))
                {
                    _SkillSet = base.CreateObjectSet<Skill>("SkillSet");
                }
                return _SkillSet;
            }
        }
        private ObjectSet<Skill> _SkillSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sports> SportsSet
        {
            get
            {
                if ((_SportsSet == null))
                {
                    _SportsSet = base.CreateObjectSet<Sports>("SportsSet");
                }
                return _SportsSet;
            }
        }
        private ObjectSet<Sports> _SportsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pronostics> PronosticsSet
        {
            get
            {
                if ((_PronosticsSet == null))
                {
                    _PronosticsSet = base.CreateObjectSet<Pronostics>("PronosticsSet");
                }
                return _PronosticsSet;
            }
        }
        private ObjectSet<Pronostics> _PronosticsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Games> GamesSet
        {
            get
            {
                if ((_GamesSet == null))
                {
                    _GamesSet = base.CreateObjectSet<Games>("GamesSet");
                }
                return _GamesSet;
            }
        }
        private ObjectSet<Games> _GamesSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Events> EventsSet
        {
            get
            {
                if ((_EventsSet == null))
                {
                    _EventsSet = base.CreateObjectSet<Events>("EventsSet");
                }
                return _EventsSet;
            }
        }
        private ObjectSet<Events> _EventsSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSet(User user)
        {
            base.AddObject("UserSet", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SkillSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSkillSet(Skill skill)
        {
            base.AddObject("SkillSet", skill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SportsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSportsSet(Sports sports)
        {
            base.AddObject("SportsSet", sports);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PronosticsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPronosticsSet(Pronostics pronostics)
        {
            base.AddObject("PronosticsSet", pronostics);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GamesSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGamesSet(Games games)
        {
            base.AddObject("GamesSet", games);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventsSet(Events events)
        {
            base.AddObject("EventsSet", events);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Events object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Events CreateEvents(global::System.Int32 id, global::System.String name)
        {
            Events events = new Events();
            events.Id = id;
            events.Name = name;
            return events;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "EventsGames", "Games")]
        public EntityCollection<Games> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Games>("Model.EventsGames", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Games>("Model.EventsGames", "Games", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SportsEvents", "Sports")]
        public Sports Sports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sports>("Model.SportsEvents", "Sports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sports>("Model.SportsEvents", "Sports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sports> SportsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sports>("Model.SportsEvents", "Sports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sports>("Model.SportsEvents", "Sports", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Games")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Games : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Games object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="opponent_1">Initial value of the Opponent_1 property.</param>
        /// <param name="opponent_2">Initial value of the Opponent_2 property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Games CreateGames(global::System.Int32 id, global::System.String opponent_1, global::System.String opponent_2, global::System.String date)
        {
            Games games = new Games();
            games.Id = id;
            games.Opponent_1 = opponent_1;
            games.Opponent_2 = opponent_2;
            games.Date = date;
            return games;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Opponent_1
        {
            get
            {
                return _Opponent_1;
            }
            set
            {
                OnOpponent_1Changing(value);
                ReportPropertyChanging("Opponent_1");
                _Opponent_1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Opponent_1");
                OnOpponent_1Changed();
            }
        }
        private global::System.String _Opponent_1;
        partial void OnOpponent_1Changing(global::System.String value);
        partial void OnOpponent_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Opponent_2
        {
            get
            {
                return _Opponent_2;
            }
            set
            {
                OnOpponent_2Changing(value);
                ReportPropertyChanging("Opponent_2");
                _Opponent_2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Opponent_2");
                OnOpponent_2Changed();
            }
        }
        private global::System.String _Opponent_2;
        partial void OnOpponent_2Changing(global::System.String value);
        partial void OnOpponent_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "EventsGames", "Events")]
        public Events Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("Model.EventsGames", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("Model.EventsGames", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Events> EventsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("Model.EventsGames", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Events>("Model.EventsGames", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GamesPronostics", "Pronostics")]
        public EntityCollection<Pronostics> Pronostics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pronostics>("Model.GamesPronostics", "Pronostics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pronostics>("Model.GamesPronostics", "Pronostics", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Pronostics")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pronostics : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pronostics object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="score_opp_1">Initial value of the Score_opp_1 property.</param>
        /// <param name="score_opp_2">Initial value of the Score_opp_2 property.</param>
        public static Pronostics CreatePronostics(global::System.Int32 id, global::System.String score_opp_1, global::System.String score_opp_2)
        {
            Pronostics pronostics = new Pronostics();
            pronostics.Id = id;
            pronostics.Score_opp_1 = score_opp_1;
            pronostics.Score_opp_2 = score_opp_2;
            return pronostics;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Score_opp_1
        {
            get
            {
                return _Score_opp_1;
            }
            set
            {
                OnScore_opp_1Changing(value);
                ReportPropertyChanging("Score_opp_1");
                _Score_opp_1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Score_opp_1");
                OnScore_opp_1Changed();
            }
        }
        private global::System.String _Score_opp_1;
        partial void OnScore_opp_1Changing(global::System.String value);
        partial void OnScore_opp_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Score_opp_2
        {
            get
            {
                return _Score_opp_2;
            }
            set
            {
                OnScore_opp_2Changing(value);
                ReportPropertyChanging("Score_opp_2");
                _Score_opp_2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Score_opp_2");
                OnScore_opp_2Changed();
            }
        }
        private global::System.String _Score_opp_2;
        partial void OnScore_opp_2Changing(global::System.String value);
        partial void OnScore_opp_2Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SportsPronostics", "Sports")]
        public Sports Sports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sports>("Model.SportsPronostics", "Sports").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sports>("Model.SportsPronostics", "Sports").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sports> SportsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sports>("Model.SportsPronostics", "Sports");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sports>("Model.SportsPronostics", "Sports", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "UserPronostics", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.UserPronostics", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.UserPronostics", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.UserPronostics", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model.UserPronostics", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "GamesPronostics", "Games")]
        public Games Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("Model.GamesPronostics", "Games").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("Model.GamesPronostics", "Games").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Games> GamesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("Model.GamesPronostics", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Games>("Model.GamesPronostics", "Games", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Skill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Skill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Skill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="averageScore">Initial value of the AverageScore property.</param>
        public static Skill CreateSkill(global::System.Int32 id, global::System.String name, global::System.String averageScore)
        {
            Skill skill = new Skill();
            skill.Id = id;
            skill.Name = name;
            skill.AverageScore = averageScore;
            return skill;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AverageScore
        {
            get
            {
                return _AverageScore;
            }
            set
            {
                OnAverageScoreChanging(value);
                ReportPropertyChanging("AverageScore");
                _AverageScore = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AverageScore");
                OnAverageScoreChanged();
            }
        }
        private global::System.String _AverageScore;
        partial void OnAverageScoreChanging(global::System.String value);
        partial void OnAverageScoreChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SkillUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.SkillUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.SkillUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.SkillUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model.SkillUser", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Sports")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sports : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sports object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Sports CreateSports(global::System.Int32 id, global::System.String name)
        {
            Sports sports = new Sports();
            sports.Id = id;
            sports.Name = name;
            return sports;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SkillUser", "Skill")]
        public Skill Skill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("Model.SkillUser", "Skill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("Model.SkillUser", "Skill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Skill> SkillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Skill>("Model.SkillUser", "Skill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Skill>("Model.SkillUser", "Skill", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
